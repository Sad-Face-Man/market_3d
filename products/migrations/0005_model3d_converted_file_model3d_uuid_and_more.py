# Generated by Django 5.2.1 on 2025-06-08 17:09

import django.core.files.storage
import django.core.validators
import utils.paths
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0004_model3d_nft_token_alter_model3d_file'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='model3d',
            name='converted_file',
            field=models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(location='/srv/ftp/market_3d_storage/models'), upload_to=utils.paths.get_converted_model_path, verbose_name='Конвертированный файл (.glb)'),
        ),
        migrations.AddField(
            model_name='model3d',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='model3d',
            name='description',
            field=models.TextField(blank=True, max_length=3000, null=True),
        ),
        migrations.AlterField(
            model_name='model3d',
            name='file',
            field=models.FileField(storage=django.core.files.storage.FileSystemStorage(location='/srv/ftp/market_3d_storage/models'), upload_to=utils.paths.get_model_directory, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['obj', 'glb', 'fbx', 'blend'])], verbose_name='Файл 3D-модели'),
        ),
        migrations.AlterField(
            model_name='model3d',
            name='nft_token',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='NFT-токен (опционально)'),
        ),
        migrations.AlterField(
            model_name='modelimage',
            name='image',
            field=models.ImageField(storage=django.core.files.storage.FileSystemStorage(location='/srv/ftp/market_3d_storage/previews'), upload_to=utils.paths.get_preview_image_path, verbose_name='Изображение превью'),
        ),
        migrations.AddConstraint(
            model_name='model3d',
            constraint=models.UniqueConstraint(condition=models.Q(('nft_token', None), _negated=True), fields=('nft_token',), name='unique_nft_token'),
        ),
    ]
